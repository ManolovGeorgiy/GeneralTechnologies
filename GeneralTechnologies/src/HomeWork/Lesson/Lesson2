# GenTech #2 / Dec 11, 2023

## Ссылки

- [VS Code](https://timeweb.com/ru/community/articles/chto-takoe-visual-studio-code)
- [Idea](https://javarush.com/groups/posts/intellij-idea)
- [хеширование паролей](https://www.kaspersky.ru/blog/the-wonders-of-hashing/3633/)
- [онлайн-генератор хешей](https://emn178.github.io/online-tools/sha256.html)

## Отличие БД от СУБД

- **БД** - данные, как таковые
- **СУБД** - прикладное ПО (приложение)

## CRUD

- `Create`
- `Read`
- `Update`
- `Delete`

## Самая распространенная архитектура хранения данных

ОДНА СУЩНОСТЬ == ОДНА ЗАПИСЬ

## Оформление Д/З

```sql
-- homework-1.sql

-- Задача 1. Вывести ...
SELECT ...

-- Задача 2. Вывести ...
SELECT ...
```

![Screenshot from 2023-12-11 22-35-04.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/95d3eea4-bdd9-4866-805a-55b03d066b78/7d881a93-ddd0-46da-a71c-89ad2074a769/Screenshot_from_2023-12-11_22-35-04.png)

**Задача. Вывести номера телефонов поставщиков из `UK` и `Brazil`**

```sql
SELECT
	Phone
FROM Suppliers

WHERE
	Country = 'UK'
	OR
	Country = 'Brazil'
```

## Базовые термины

- **рефакторинг** - перевыпуск (перепроизводство) кода

## Оператор `IN`

- выполняет проверку принадлежности к **списку** значений
- является синтаксическим сахаром

**Примеры**

```sql
SELECT
	Phone
FROM Suppliers

WHERE
	Country IN ('UK', 'Brazil')
```

```sql
SELECT
	Phone
FROM Suppliers

WHERE
	Country = 'UK'
	OR
	Country = 'Brazil'
```

**Задача. Вывести клиентов из `USA`, `France`, `Germany`**

```sql
SELECT *
FROM Customers

WHERE
	Country IN ('USA', 'France', 'Germany')
-- NOT Country IN ('USA', 'France', 'Germany')
```

**Задача. Вывести `название` и `стоимость` товаров из категорий `1` и `3` со стоимостью до `50` EUR (вкл.)**

```sql
SELECT
	ProductName,
	Price
FROM Products

WHERE
	Price <= 50
	AND
	CategoryID IN (1, 3)
```

```sql
SELECT
	ProductName,
	Price
FROM Products

WHERE
	Price <= 50
	AND
	(CategoryID = 1 OR CategoryID = 3)
```

**Задачи. Вывести товары с ценой от `80` до `190` EUR (вкл.) не из категории `5`**

```sql
SELECT *
FROM Products
WHERE
	NOT CategoryID = 5
	AND
	Price >= 80 AND Price <= 190
```

## Оператор диапазона `BETWEEN`

- выполняет проверку принадлежности к **диапазону** значений
- является синтаксическим сахаром

**Примеры**

```sql
SELECT *
FROM Products
WHERE
	NOT CategoryID = 5
	AND
	Price BETWEEN 80 AND 190
 -- 	Price >= 80 AND Price <= 190
```

**Задача. Вывести товары с ценой от `10` до `50` EUR из категорий `1, 2, 3, 5`**

```sql
SELECT *
FROM Products

WHERE
		Price BETWEEN 10 AND 50
    AND
    CategoryID IN (1, 2, 3, 5)
```

## Сортировка в SQL / Оператор `ORDER BY`

**Примеры**

```sql
SELECT *
FROM Products
ORDER BY Price DESC
	-- DESC - по убыванию
	-- ASC - по возрастанию (по умолчанию)
```

```sql
SELECT *
FROM Products

WHERE
	SupplierID = 1

ORDER BY Price ASC
```

**Задача. Вывести товары из `5` категории по возрастанию цены**

```sql
SELECT *
FROM Products

WHERE
	CategoryID = 5

ORDER BY Price ASC
```

## Лимитирование вывода / Оператор `LIMIT`

- Как правило, применяется для:
    - постраничного (порционного) вывода (напр., товаров в каталоге)
    - вывода блока рекомендаций
- в простом применении выводит первые строки в указанном количестве

**Пример. Вывести три самых дорогих товара**

```sql
SELECT *
FROM Products
ORDER BY Price DESC
LIMIT 3
```

**Пример. Вывести пять самых дешевых товара**

```sql
SELECT *
FROM Products
ORDER BY Price ASC
LIMIT 5

-- LIMIT 3 OFFSET 0 -- стр. 1
-- LIMIT 3 OFFSET 3 -- стр. 2
-- LIMIT 3 OFFSET 6 -- стр. 3
```

## Пример формулы расчета смещения

```sql
PAGE = 1    -- номер страницы
LIMIT = 10  -- сколько выводить на страницу

OFFSET = LIMIT * (PAGE - 1)
OFFSET = LIMIT * PAGE - LIMIT
```

**Задача. Вывести название и стоимость одного самого дорогого товара из категории `1`**

```sql
SELECT
		ProductName,
   	Price
FROM Products

WHERE
	CategoryID = 1

ORDER BY Price DESC
LIMIT 1
```

**Задача. Вывести один товар, который находится на третьем месте среди самых дорогих**

```sql
SELECT *
FROM Products

ORDER BY Price DESC
LIMIT 1 OFFSET 2
```

## Необходимые знания для работы в команде с помощью Git/GitHub

1. Базовый порядок работы
2. Ветвление
3. Модели совместной работы