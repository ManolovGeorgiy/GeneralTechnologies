GenTech #1 / Dec 4, 2023
Ссылки
песочница
проекция (полей)
Базовый состав типового проекта
FE интерфейс
Веб-сайты - человеко-чит.
Приложения - человеко-чит.
API - машино-чит.
BE бизнес-логика
DB хранилище
Deployment развертывание
КЛИЕНТ-СЕРВЕРНАЯ АРХИТЕКТУРА
схема “ЗАПРОС-ОТВЕТ”
роли
клиент (активная сторона) - выполняет запросы
сервер (пассивная сторона) - принимает и обрабатывает запросы

Основная задача любого разработчика
автоматизация бизнес-процессов
Базы данных (Data Bases, DB)
БД - структурированный набор данных, предназначенный для автоматизированной обработки
фактически, представляет собой данные
цифровая копия сущностей (объектов) реального мира
СУБД (DBMS, Data Base Management Software) - прикладное ПО (приложение)
Система Управления Базой Данных (напр., MySQL)
Схема работы с СУБД (БД)
BE → DBMS → BE
Модели данных (БД)
Это способ описания (хранения) данных в БД
Реляционная (табличная) - напр., MySQL
Документная (документ - ассоц/массив) - напр., MongoDB
Графовая (теория графов) - напр., OrientDB
Плоская - напр., Redis
Типы операций в СУБД
Чтение
Запись
Категории операций в СУБД
CRUD (Create, Read, Update, Delete)
Aggregation (аналитика, итоги, статистику) - вычисленных данных
Способы подключения к СУБД
Из программного кода (BE) - целевой способ
Из GUI/CLI-клиентов - вспомогательный способ
SQL: CRUD
SQL - язык структурированных запросов

SQL CRUD: Read
SELECT
SELECT DISTINCT (только уникальные значения)
SELECT  *      -- все поля
FROM Customers -- название таблицы
​
-- только страны
SELECT
		Country -- проекция (полей)
FROM Customers

SELECT
		Country,
    City,
    CustomerName
FROM Customers

SELECT DISTINCT -- список уникальных стран
	Country
FROM Customers
​
Проекция (полей) - инструмент оптимизации запросов (на чтение). Применяется для:
уменьшение времени запроса
снижение нагрузки на выч/ресурсы (процессор, память, сеть)
Фильтрация исходных данных / оператор WHERE
Пример. Вывести клиентов из Germany
SELECT *
FROM Customers

WHERE
	Country = 'Germany' -- фильтрация по стране
​
Логические операторы в SQL (приоритеты - в порядке перечисления)
NOT
AND
OR
Пример. Вывести клиентов из Germany и USA
SELECT *
FROM Customers

WHERE
		Country = 'Germany'
		OR
    Country = 'USA'
​
Базовые структуры
скаляр
массив
ассоц/массив (карта, объект и т.д.)
множество
Связанные понятия
данные (то, что дано): 150, -22, ‘hello’
информация (фактология): Товар стоит 150 EUR
сведения (заключение, вывод): Товар стоит 150 EUR - для нашей компании это очень дорого
IPO-модель
Input
Processing
Output
Пример. Вывести клиентов из Germany и Berlin
SELECT *
FROM Customers

WHERE
		Country = 'Germany'
    AND
    City = 'Berlin'
​
Пример. Вывести клиентов не из Germany
SELECT *
FROM Customers

WHERE
	NOT Country = 'Germany'
	-- Country != 'Germany'
	-- Country <> 'Germany'
​
Задача. Вывести город и почтовый индекс клиентов из France
SELECT
		City,
    PostalCode
FROM Customers

WHERE
	Country = 'France'
​
Задача. Вывести имена и страны клиентов, кроме тех, что из UK и USA
SELECT
	CustomerName,
	Country
FROM Customers

WHERE
		NOT Country = 'UK'
    AND
    NOT Country = 'USA'
​
Задача. Вывести страны поставщиков
SELECT DISTINCT
	Country
FROM Suppliers
​
Задача. Вывести названия товаров
SELECT
	ProductName
FROM Products
​
Задача. Вывести товары с ценой 50 EUR и более
(проекция: название_товара, цена_товара)
SELECT
		ProductName,
    Price
FROM Products

WHERE
	Price >= 50
​
Задача. Вывести товары с ценой от 50 до 100 EUR (вкл.)
SELECT *
FROM Products

WHERE
	Price >= 50
	AND
	Price <= 100
​
Задача. Вывести название и стоимость товаров из категорий 1 и 3 со стоимостью до 50 EUR (вкл.)
SELECT
	ProductName,
	Price
FROM Products

WHERE
	Price <= 50
	AND
	(CategoryID = 1 OR CategoryID = 3)